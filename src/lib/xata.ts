// Generated by Xata Codegen 0.28.2. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Books",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "" },
      { name: "true_title", type: "string", notNull: true, defaultValue: "" },
      { name: "extension", type: "string", notNull: true, defaultValue: "" },
      { name: "size", type: "int", notNull: true, defaultValue: "0" },
      { name: "sources", type: "multiple" },
      { name: "md5", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Books = InferredTypes["Books"];
export type BooksRecord = Books & XataRecord;

export type DatabaseSchema = {
  Books: BooksRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://lolibrary-92ghbn.us-east-1.xata.sh/db/lolibrary",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
